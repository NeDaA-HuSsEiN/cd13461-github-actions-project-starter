name: Deploy Knowledge Base

on:
  push:
    branches:
      - main
    # Ignore changes in specific files
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger in case of emergency

permissions:
  issues: write  # Allow issue creation
  
jobs:
  # Job 1: Test
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js (version 18+)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Run Linters
        run: npm run lint:all

      - name: Run URL checker
        env:
          URL_CHECKER_TIMEOUT: 5000
        run: node script/url-checker.js -t $URL_CHECKER_TIMEOUT -d src/posts

  # Job 2: Build
  build:
    runs-on: ubuntu-latest
    needs: test  # Ensure test job is successful before building
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js (version 18+)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build the static site for production
        run: |
          export PATH_PREFIX="/${{ github.repository }}"
          npm run prod

      - name: Upload built site as artifact
        uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: ./_site

  # Job 3: Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure build job is successful before deploying
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built site artifact
        uses: actions/download-artifact@v3
        with:
          name: github-pages

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2
        with:
          artifact_name: github-pages


      - name: Authenticate and create deployment status issue
        run: |
          gh auth login --with-token <<<"${{ secrets.GITHUB_TOKEN }}"
          DATE=$(date -u)
          STATUS="${{ steps.deployment.outcome }}"
          ISSUE_TITLE="$DATE - Deployment: $STATUS"
          URL="${{ steps.deployment.outputs.page_url }}"
          ISSUE_BODY="URL: $URL"
          echo "Title: $ISSUE_TITLE. Body: $ISSUE_BODY."
          gh issue create --repo ${{ github.repository }} --title "$ISSUE_TITLE" --body "$ISSUE_BODY"


