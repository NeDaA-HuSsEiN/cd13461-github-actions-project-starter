name: Deploy Knowledge Base

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.gitignore'
      - 'README.md'
      - 'CONTRIBUTING.md'
      - 'LICENSE'
  pull_request:
    branches:
      - main

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Start Timer
        id: timer-start
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run Linters
        run: npm run lint:all

      - name: Run Scripts
        env:
          URL_CHECKER_TIMEOUT: 5000
        run: node script/url-checker.js -t $URL_CHECKER_TIMEOUT -d src/posts

      - name: End Timer
        id: timer-end
        run: echo "END_TIME=$(date +%s)" >> $GITHUB_ENV

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      actions: write
    steps:
      - name: Start Timer
        id: timer-start
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Build Static Pages
        env:
          PATH_PREFIX: "/${{ github.event.repository.name }}/"
        run: npm run prod

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: built-site
          path: ./_site

      - name: End Timer
        id: timer-end
        run: echo "END_TIME=$(date +%s)" >> $GITHUB_ENV

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      pages: write
    steps:
      - name: Start Timer
        id: timer-start
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: built-site

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v2

      - name: Create Deployment Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_URL: ${{ github.repository_url }}
        run: |
          gh auth login --with-token <<< $GITHUB_TOKEN
          STATUS="succeeded"
          if [ ${{ job.status }} != "success" ]; then STATUS="failed"; fi
          gh issue create --title "$(date +'%Y-%m-%d') - Deployment: $STATUS" \
                          --body "URL: $REPO_URL"

      - name: End Timer
        id: timer-end
        run: echo "END_TIME=$(date +%s)" >> $GITHUB_ENV

  calculate-runtime:
    runs-on: ubuntu-latest
    needs: [test, build, deploy]
    permissions:
      contents: read
    steps:
      - name: Calculate Total Runtime
        run: |
          START_TIME=${{ env.START_TIME }}
          END_TIME=${{ env.END_TIME }}
          RUNTIME=$((END_TIME - START_TIME))
          echo "Total Runtime: $RUNTIME seconds"
