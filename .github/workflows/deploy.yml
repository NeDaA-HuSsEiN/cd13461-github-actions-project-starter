name: Deploy Knowledge Base

on:
  push:
    branches:
      - main
    # Ignore changes in specific files
    paths-ignore:
      - .gitignore
      - README.md
      - CONTRIBUTING.md
      - LICENSE
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger in case of emergency

jobs:
  # Job 1: Test
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js (version 18+)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node.js dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Run Linters
        run: npm run lint:all

      - name: Run URL checker
        env:
          URL_CHECKER_TIMEOUT: 5000
        run: node script/url-checker.js -t $URL_CHECKER_TIMEOUT -d src/posts

  # Job 2: Build
  build:
    runs-on: ubuntu-latest
    needs: test  # Ensure test job is successful before building
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js (version 18+)
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install Dependencies
        run: npm install

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build the static site for production
        run: |
          export PATH_PREFIX="/${{ github.repository }}"
          npm run prod

      - name: Upload built site as artifact
        uses: actions/upload-artifact@v3
        with:
          name: knowledge-base
          path: _site/

  # Job 3: Deploy
  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensure build job is successful before deploying
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download built site artifact
        uses: actions/download-artifact@v3
        with:
          name: knowledge-base

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: _site

      - name: Authenticate and create deployment status issue
        run: |
          GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
          STATUS="succeeded"
          URL="https://$GITHUB_REPOSITORY.github.io"
          if [ $? -ne 0 ]; then
            STATUS="failed"
          fi
          gh issue create --title "$(date +'%Y-%m-%d') - Deployment: $STATUS" --body "URL: $URL"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

